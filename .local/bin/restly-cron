#!/bin/bash
set -euo pipefail
set -x

cmd=$2

bash -n $(command -v "$0")

if [ -e /sys/class/power_supply/AC/online ]
then
    # Don't run on battery power.
    test "$(cat /sys/class/power_supply/AC/online)" -eq 1 || exit 0
fi

if nmcli -t -f GENERAL.DEVICE,GENERAL.METERED dev show "$(ip route list 0/0 | sed -r 's/.*dev (\S*).*/\1/g')" | grep yes
then
    echo "Refusing to run while on metered connection, unset flag in Gnome Settings > Wi-Fi > Connected Network > Details to continue." 1>&2
    exit 0
fi

export HOME=/home/$USER
export PATH="${HOME}/.local/bin:${PATH}"
export DISPLAY=:0
export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id --user)/bus
export SSH_AUTH_SOCK=/run/user/$(id --user)/keyring/ssh

nice="nice ionice"

cgroup="/sys/fs/cgroup/user.slice/user-$(id --user).slice/user@$(id --user).service/app.slice/restly-${cmd}.service"
if [ -f "$cgroup/cpu.uclamp.max" ]
then
    # Only request a part of a big core's CPU cycles. This allows the kernel to
    # move us to a little core, or to run the big core at a low cpufreq.
    #
    # TODO: Use CPU base MHz / CPU max MHz here to cause the CPU to run at base
    # freq? Also, actually test this on a machine where it has an effect on the
    # fan.
    echo -n "25" > "$cgroup/cpu.uclamp.max"
else
    # This has been tested and optimized for a Lenovo ThinkPad X1 Carbon Gen 9
    # (20XXS0Y800) with an 8-thread 11th Gen Intel(R) Core(TM) i7-1185G7 @
    # 3.00GHz with Ubuntu 22.04.

    # Oh dirty hack, we pin ourself to a CPU, and then lower that CPU's freq.
    # Like this we create ourself our own little core and can do the backup in
    # the background without causing fan noise.
    little_cpu=$(($RANDOM % $(nproc)))
    little_core_cpus=$little_cpu
    export GOMAXPROCS=1

    # When on SMP, also use the silbling because it will be affected by the low
    # freq anyway and therefore will not be able to do much for the rest of the
    # system.
    if [ -f /sys/devices/system/cpu/cpu$little_cpu/topology/core_cpus_list ]
    then
        little_core_cpus=$(cat /sys/devices/system/cpu/cpu$little_cpu/topology/core_cpus_list)
        export GOMAXPROCS=2
    fi

    set +e
    reset_freq() {
        max_freq_khz=$(cat /sys/devices/system/cpu/cpu$little_cpu/cpufreq/cpuinfo_max_freq)
        sudo --non-interactive cpupower -c $little_core_cpus frequency-set --max ${max_freq_khz}kHz
    }

    trap reset_freq EXIT

    # On my ThinkPad X1 Carbon Gen 9, the base freq still causes 65DegC @ 120PWM
    # fan noise without https://github.com/luisgerhorst/fancontrol-tpx1c9
    #
    freq_khz=$(cat /sys/devices/system/cpu/cpu$little_cpu/cpufreq/base_frequency)
    #
    # freq_khz=$(cat /sys/devices/system/cpu/cpu$little_cpu/cpufreq/cpuinfo_min_freq)
    sudo --non-interactive cpupower -c $little_core_cpus frequency-set --max ${freq_khz}kHz
    set -e

    nice="$nice taskset --cpu-list $little_core_cpus"
fi

if [ "$cmd" = backup ]
then
    $nice restly $@
else
    gnome-session-inhibit --inhibit suspend \
        $nice \
        restly $@
fi
